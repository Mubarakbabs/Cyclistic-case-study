{"metadata":{"kernelspec":{"name":"ir","display_name":"R","language":"R"},"language_info":{"mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.6.0","file_extension":".r","codemirror_mode":"r"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [markdown]\n# # This notebook details the cleaning process for the Cyclistic case study, the Capstone from the Google Analytics Professional Certificate.\n# The entire presentation is available [here](https://drive.google.com/file/d/1TJVFIrYrOVh_mlhPSfGv1TTDRzKcJc2q/view?usp=sharing)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:09:36.501539Z\",\"iopub.execute_input\":\"2023-01-06T10:09:36.504758Z\",\"iopub.status.idle\":\"2023-01-06T10:09:36.526409Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#importing the necessary libraries for the cleaning and analysis process\nlibrary(\"tidyverse\")\nlibrary(\"lubridate\")\nlibrary(\"skimr\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:09:36.553180Z\",\"iopub.execute_input\":\"2023-01-06T10:09:36.554547Z\",\"iopub.status.idle\":\"2023-01-06T10:09:41.482778Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#importing the csv files containing the trip data. The data consists of four quarters in separate files. They will be combined later in the process\ntrips_q2_19 <- read_csv(\"/kaggle/input/cyclistic/Divvy_Trips_2019_Q2.xlsx.csv\")\ntrips_q3_19 <- read_csv(\"/kaggle/input/cyclistic1/Divvy_Trips_2019_Q3.csv\")\ntrips_q4_19 <- read_csv(\"/kaggle/input/cyclistic1/Divvy_Trips_2019_Q4.csv\")\ntrips_q1_20 <- read_csv(\"/kaggle/input/cyclistic1/Divvy_Trips_2020_Q1.csv\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:09:41.484833Z\",\"iopub.execute_input\":\"2023-01-06T10:09:41.485945Z\",\"iopub.status.idle\":\"2023-01-06T10:09:41.512103Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#checking the column names to ensure they match so that all the data can be combined in one place\ncolnames(trips_q2_19)\ncolnames(trips_q3_19)\ncolnames(trips_q4_19)\ncolnames(trips_q1_20)\n\n# %% [markdown]\n# We see that we have the same columns from q2 2019 to Q4 2019. But the names are different. Some new columns were also added in Q1 2020 while others were removed. Hence, analysis will be based on the common columns\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:09:41.523468Z\",\"iopub.execute_input\":\"2023-01-06T10:09:41.524601Z\",\"iopub.status.idle\":\"2023-01-06T10:09:41.543166Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#first we edit the names of the columns on q2 19 so they are the same names as those in q3 and q4.\ntrips_q2_19 <- rename(trips_q2_19, \n                      \"trip_id\" = \"01 - Rental Details Rental ID\", \n                      \"start_time\" = \"01 - Rental Details Local Start Time\", \n                      \"end_time\" = \"01 - Rental Details Local End Time\", \n                      \"bikeid\" = \"01 - Rental Details Bike ID\", \n                      \"tripduration\" = \"01 - Rental Details Duration In Seconds Uncapped\", \n                      \"from_station_id\" = \"03 - Rental Start Station ID\", \n                      \"from_station_name\" = \"03 - Rental Start Station Name\", \n                      \"to_station_id\" = \"02 - Rental End Station ID\", \n                      \"to_station_name\" = \"02 - Rental End Station Name\", \n                      \"usertype\" = \"User Type\", \n                      \"gender\" = \"Member Gender\", \n                      \"birthyear\" = \"05 - Member Details Member Birthday Year\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:09:41.546116Z\",\"iopub.execute_input\":\"2023-01-06T10:09:41.547356Z\",\"iopub.status.idle\":\"2023-01-06T10:09:54.448095Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#to combine 2019 with 2020 data, we need the column names and types to match\n#fixing the different datetime types/formats\ntrips_q2_19$start_time = dmy_hms(trips_q2_19$start_time)\ntrips_q2_19$end_time = dmy_hms(trips_q2_19$end_time)\ntrips_q3_19$start_time = ymd_hms(trips_q3_19$start_time)\ntrips_q3_19$end_time = ymd_hms(trips_q3_19$end_time)\ntrips_q4_19$start_time = ymd_hms(trips_q4_19$start_time)\ntrips_q4_19$end_time = ymd_hms(trips_q4_19$end_time)\ntrips_q1_20$started_at = ymd_hms(trips_q1_20$started_at)\ntrips_q1_20$ended_at = ymd_hms(trips_q1_20$ended_at)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:09:54.449898Z\",\"iopub.execute_input\":\"2023-01-06T10:09:54.450967Z\",\"iopub.status.idle\":\"2023-01-06T10:09:55.952080Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#combining the three 2019 quarters in the same dataframe then reconcile column names with 2020 names\ntrips_2019 <- rbind(trips_q2_19, trips_q3_19, trips_q4_19)\n\ntrips_2019 <- rename(trips_2019,\n                    \"start_station_name\" = \"from_station_name\",\n                    \"start_station_id\" = \"from_station_id\",\n                    \"end_station_name\" = \"to_station_name\",\n                    \"end_station_id\" = \"to_station_id\",\n                    )\ntrips_q1_20 <- rename(trips_q1_20,\n                     \"trip_id\" = \"ride_id\",\n                     \"start_time\" = \"started_at\",\n                     \"end_time\" = \"ended_at\",\n                     \"usertype\" = \"member_casual\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:09:55.954845Z\",\"iopub.execute_input\":\"2023-01-06T10:09:55.957107Z\",\"iopub.status.idle\":\"2023-01-06T10:09:57.990629Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#q1 2020 data doesn't have a tripduration column.\n#creating a new trip duration column for q1 2020 and updating the one for 2019 so the data types match\ntrips_q1_20$tripduration <- as.numeric(trips_q1_20$end_time - trips_q1_20$start_time)\ntrips_2019$tripduration <- as.numeric(trips_2019$end_time - trips_2019$start_time)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:09:57.993026Z\",\"iopub.execute_input\":\"2023-01-06T10:09:57.994287Z\",\"iopub.status.idle\":\"2023-01-06T10:10:01.630841Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#stacking the two dataframes into one keeping only the common columns\nall_trips = rbind(\n    select(trips_2019, 'trip_id', 'start_time', 'end_time', 'tripduration', 'start_station_id', 'start_station_name','end_station_id','end_station_name','usertype'),\n    select(trips_q1_20, 'trip_id', 'start_time', 'end_time', 'tripduration', 'start_station_id', 'start_station_name','end_station_id','end_station_name','usertype'))\nstr(all_trips)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:01.633501Z\",\"iopub.execute_input\":\"2023-01-06T10:10:01.634794Z\",\"iopub.status.idle\":\"2023-01-06T10:10:15.601639Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#inspecting the dataframe columns for quality issues\nskim_without_charts(all_trips)\n\n# %% [markdown]\n# **The above shows the following issues with the data**\n# 1. One null value in end_station_id and end_station_name: this will be removed\n# 2. Negative trip duration: A trip cannot start earlier than it ended. these rows will be removed\n# 3. Some trips are longer than a day. Since the business doesn't allow a bike to be rented for more than one day, all trips above 1440 minutes are bad data and will be removed. The current trip duration are in seconds and will be converted to minutes\n# 4. There are four member types instead of two. The names of the user segments were changed. These will be reconciled.\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:15.603974Z\",\"iopub.execute_input\":\"2023-01-06T10:10:15.607612Z\",\"iopub.status.idle\":\"2023-01-06T10:10:15.802796Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#removing the missing values in end station\nalltrips <- all_trips[is.na(all_trips$end_station_name)==FALSE,]\n#note that the name of the dataframe here was changed to preserve the original combined dataframes before removing rows. This forms a sort of checkpoint so that if some rows are mistakenly removed, the analyst doesn't have to return to square 1 to fix it.\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:15.804659Z\",\"iopub.execute_input\":\"2023-01-06T10:10:15.805785Z\",\"iopub.status.idle\":\"2023-01-06T10:10:16.295678Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#convert tripduration to minutes\nalltrips <- alltrips %>% mutate(tripduration = tripduration/60)\n#remove the following:\n#1. all trip duration below 0 and above 1440\n#2. trips starting at 'HQ QR' are not actually trips but are bikes removed from their docking station for quality control\nalltrips <- alltrips[!c(alltrips$tripduration<0\n                        |alltrips$tripduration>1440\n                        |alltrips$start_station_name == 'HQ QR'),]\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:16.297772Z\",\"iopub.execute_input\":\"2023-01-06T10:10:16.299133Z\",\"iopub.status.idle\":\"2023-01-06T10:10:19.057663Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#reconcile old and new names for user groups\nalltrips$usertype <- alltrips$usertype %>%\nstr_replace( \"Subscriber\", \"member\") %>%\nstr_replace(\"Customer\", \"casual\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:19.060185Z\",\"iopub.execute_input\":\"2023-01-06T10:10:19.061261Z\",\"iopub.status.idle\":\"2023-01-06T10:10:33.280968Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#check that the cleaning was successful\nskim_without_charts(alltrips)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:33.282856Z\",\"iopub.execute_input\":\"2023-01-06T10:10:33.283967Z\",\"iopub.status.idle\":\"2023-01-06T10:10:40.979450Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#there are many outliers to the right \nalltrips %>% select(tripduration)%>% ggplot(aes(x=tripduration))+geom_boxplot()\n#the boxplot looks pretty strange. While there seem to be many outliers, they are so many that we can't chalk them down to measurement errors. It simply means there are some users that use the bikes very intensively beyond the average\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:40.982652Z\",\"iopub.execute_input\":\"2023-01-06T10:10:40.984529Z\",\"iopub.status.idle\":\"2023-01-06T10:10:42.209709Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#investigating outliers\nq1 = quantile(alltrips$tripduration, probs=0.25)\nq3 = quantile(alltrips$tripduration, probs=0.75)\nIQR = q3-q1\nlb = q1 - (1.5*IQR)\nub = q3 + (1.5*IQR)\noutliers <- alltrips[alltrips$tripduration<lb|alltrips$tripduration>ub,]\nskim_without_charts(outliers)\n\n# %% [markdown]\n# The investigation of the outliers shows that over 200k rows will be considered as outliers looking at this.\n# Also, all of the \"outliers\" fall within reasonable range of a bicycle ride (it's not too strange to ride a bicycle for several hours). And this seems like a reasonable frequent occurrence. Hence, the outliers will be left as is since they can't be written off as bad data\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:42.211839Z\",\"iopub.execute_input\":\"2023-01-06T10:10:42.213336Z\",\"iopub.status.idle\":\"2023-01-06T10:10:43.881208Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#taking a look at the distribution ride lengths. It seems reasonable that more people will make shorter trips than longer\nalltrips %>% ggplot(aes(x=tripduration))+geom_histogram()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:43.883279Z\",\"iopub.execute_input\":\"2023-01-06T10:10:43.884337Z\",\"iopub.status.idle\":\"2023-01-06T10:10:45.343497Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#a closer look at the long tail shows a bump at the end, which indicates that some users rent the bikes for an entire day\nalltrips %>% ggplot(aes(x=tripduration))+geom_histogram()+coord_cartesian(ylim=c(0,100000))\n\n# %% [markdown]\n# # Analysis\n\n# %% [markdown]\n# **Question: How do annual members and casual users differ?**\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:45.346001Z\",\"iopub.execute_input\":\"2023-01-06T10:10:45.347195Z\",\"iopub.status.idle\":\"2023-01-06T10:10:51.275759Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#creating new columns to perform time based calculations\nalltrips <- alltrips%>%mutate(\n    ride_month = month(start_time, label=TRUE), \n    weekday = wday(start_time,label=TRUE), \n    date = mday(start_time), \n    timeofday = hour(start_time)\n)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:51.278125Z\",\"iopub.execute_input\":\"2023-01-06T10:10:51.279330Z\",\"iopub.status.idle\":\"2023-01-06T10:10:51.383460Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#how many trips are started by casual vs members respectively?\nalltrips%>%group_by(usertype) %>% summarise(number_of_rides = n(),) %>%mutate(perc_total = number_of_rides/sum(number_of_rides))\n\n# %% [markdown]\n# members are responsible for majority of trips started\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:51.385583Z\",\"iopub.execute_input\":\"2023-01-06T10:10:51.386634Z\",\"iopub.status.idle\":\"2023-01-06T10:10:53.590759Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#what is the average ride length for each user group?\naggregate(alltrips$tripduration ~ alltrips$usertype, FUN = mean)\naggregate(alltrips$tripduration ~ alltrips$usertype, FUN = median)\n\n# %% [markdown]\n# the average casual trip is three times the length of the member trip. This means they are spending a lot of time riding but they prefer to do this without subscribing.\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:10:53.593728Z\",\"iopub.execute_input\":\"2023-01-06T10:10:53.595500Z\",\"iopub.status.idle\":\"2023-01-06T10:12:45.885058Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#number of trips by day of week\nalltrips%>%group_by(usertype,weekday)%>%\nmutate(number_of_rides=n())%>%\nggplot(aes(x=alltrips$weekday, y=number_of_rides, color=usertype))+\ngeom_point()\n\n# %% [markdown]\n# members cycle mostly on weekdays (explains the shorter trip lengths) while casual users have more trips on weekends. we should encourage casual to ride to work.\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:12:45.887078Z\",\"iopub.execute_input\":\"2023-01-06T10:12:45.888146Z\",\"iopub.status.idle\":\"2023-01-06T10:14:37.848986Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#number of trips by time of day\nalltrips%>%group_by(usertype,timeofday)%>%\nmutate(number_of_rides=n())%>%\nggplot(aes(x=alltrips$timeofday, y=number_of_rides, color=usertype))+\ngeom_point()\n#spike around 7pm for members and even casual though not as high. Strengthens the initial hypothesis. Let's see if this spike exists for both weekend and weekday\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:14:37.850862Z\",\"iopub.execute_input\":\"2023-01-06T10:14:37.852013Z\",\"iopub.status.idle\":\"2023-01-06T10:14:53.296020Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#number of trips by time of day during the weekend. The 7pm outlier persists but the morning spike is gone\nweekend <- c('Sat', 'Sun')\nalltrips[alltrips$weekday==weekend,]%>%group_by(usertype, timeofday)%>%mutate(number_of_rides=n())%>%ggplot(aes(x=timeofday, y=number_of_rides, color=usertype))+geom_point()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:14:53.298337Z\",\"iopub.execute_input\":\"2023-01-06T10:14:53.299538Z\",\"iopub.status.idle\":\"2023-01-06T10:16:15.821279Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#number of trips by time of day during weekdays\nalltrips[alltrips$weekday %in% weekend==FALSE,]%>%\ngroup_by(usertype,timeofday)%>%\nmutate(number_of_rides=n())%>%\nggplot(aes(x=timeofday, y=number_of_rides, color=usertype))+\ngeom_point()\n#perhaps casual users use bikes as a last resort at closing time even if they didn't take it to work\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:16:15.823486Z\",\"iopub.execute_input\":\"2023-01-06T10:16:15.825182Z\",\"iopub.status.idle\":\"2023-01-06T10:18:07.354174Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#month by month trend\nalltrips%>%group_by(usertype, ride_month)%>%mutate(number_of_rides=n())%>%ggplot(aes(x=ride_month, y=number_of_rides, color=usertype))+geom_point()\n\n# %% [markdown]\n# Number of trips trend by month, with more trips during the summer months. However, the trends are similar for both casual users and members. Hence, this doesn't offer insights to how the marketing strategy for members can be differentiated from those for casual users\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:18:07.356184Z\",\"iopub.execute_input\":\"2023-01-06T10:18:07.357412Z\",\"iopub.status.idle\":\"2023-01-06T10:18:09.984944Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#what stations do trips most commonly start from?\nstation_trips <- aggregate(alltrips$trip_id ~ alltrips$usertype + alltrips$start_station_name+alltrips$weekday, FUN = length)%>% arrange(desc(\"trip_id\"))%>%pivot_wider(names_from = \"alltrips$usertype\", values_from = \"alltrips$trip_id\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:23:02.762814Z\",\"iopub.execute_input\":\"2023-01-06T10:23:02.764209Z\",\"iopub.status.idle\":\"2023-01-06T10:23:02.776259Z\"},\"jupyter\":{\"outputs_hidden\":false}}\ncolnames(station_trips)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:26:03.716084Z\",\"iopub.execute_input\":\"2023-01-06T10:26:03.717344Z\",\"iopub.status.idle\":\"2023-01-06T10:26:03.729420Z\"},\"jupyter\":{\"outputs_hidden\":false}}\nstation_trips <- rename(station_trips,\n                        'start_station' = 'alltrips$start_station_name', \n                        'weekday' = 'alltrips$weekday'\n                       )\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:26:19.440166Z\",\"iopub.execute_input\":\"2023-01-06T10:26:19.441592Z\",\"iopub.status.idle\":\"2023-01-06T10:26:19.492746Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#where do members start trips from the most? \nstation_trips%>%group_by(start_station)%>%summarise(n_trips = sum(member))%>%arrange(desc(n_trips))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:26:57.448444Z\",\"iopub.execute_input\":\"2023-01-06T10:26:57.449812Z\",\"iopub.status.idle\":\"2023-01-06T10:26:57.509317Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#where do casual users start trips from the most? \nstation_trips%>%group_by(start_station)%>%summarise(n_trips = sum(casual))%>%arrange(desc(n_trips))\n\n# %% [markdown]\n# This suggests there is a geographical divide between members and casual users\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:27:14.278330Z\",\"iopub.execute_input\":\"2023-01-06T10:27:14.280905Z\",\"iopub.status.idle\":\"2023-01-06T10:27:31.763163Z\"},\"jupyter\":{\"outputs_hidden\":false}}\n#create a summarized data frame with number of rides and mean ride duration by usertype, weekday and time of day\nn_ride <- aggregate(alltrips$trip_id ~ alltrips$usertype +date(alltrips$start_time)+ alltrips$weekday +alltrips$timeofday, FUN = length)\nmean_length <- aggregate(alltrips$tripduration ~ alltrips$usertype +date(alltrips$start_time)+alltrips$weekday +alltrips$timeofday , FUN = sum)\ndf_export <- merge(n_ride,mean_length, sort = FALSE)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:27:31.765047Z\",\"iopub.execute_input\":\"2023-01-06T10:27:31.766146Z\",\"iopub.status.idle\":\"2023-01-06T10:27:31.840802Z\"},\"jupyter\":{\"outputs_hidden\":false}}\nsetwd('/kaggle/working')\n\nwrite.csv(df_export, \"summarized_cyclistic.csv\")\nwrite.csv(station_trips, \"stations_start.csv\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-01-06T10:27:31.848472Z\",\"iopub.execute_input\":\"2023-01-06T10:27:31.849581Z\",\"iopub.status.idle\":\"2023-01-06T10:27:31.863284Z\"},\"jupyter\":{\"outputs_hidden\":false}}\nlist.files(path = \"../working\")\n\n# %% [code] {\"jupyter\":{\"outputs_hidden\":false}}\n","metadata":{"_uuid":"dc7aec03-2ac0-4864-bb10-13a246b847d8","_cell_guid":"8d2750e4-38e4-4bfe-a017-dc361084f066","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}